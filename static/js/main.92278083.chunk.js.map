{"version":3,"sources":["DataTableExample.js","App.js","serviceWorker.js","index.js"],"names":["Table","DataTable","TableBody","TableCell","TableContainer","TableHead","TableHeader","TableRow","TableToolbar","TableToolbarAction","TableToolbarContent","TableToolbarSearch","initialRows","id","name","protocol","port","rule","attached_groups","status","headers","key","header","DataTableExample","react_default","a","createElement","className","rows","render","_ref","getHeaderProps","getRowProps","onInputChange","onChange","icon","iconDownload","iconDescription","onClick","iconEdit","iconSettings","Button","small","kind","map","row","cells","cell","value","App","onFocus","ModalWrapper","handleSubmit","passiveModal","buttonTriggerText","modalLabel","modalHeading","selectorPrimaryFocus","shouldCloseAfterSubmit","onBlur","onMouseDown","onMouseEnter","onMouseLeave","onMouseUp","style","minWidth","Dropdown","defaultText","selectedText","ariaLabel","e","console","log","onOpen","onClose","DropdownItem","itemText","Component","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.92278083.chunk.js","sourcesContent":["import React from 'react';\nimport { iconDownload, iconEdit, iconSettings } from 'carbon-icons';\nimport { Button, DataTable } from 'carbon-components-react';\nconst {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableHeader,\n  TableRow,\n  TableToolbar,\n  TableToolbarAction,\n  TableToolbarContent,\n  TableToolbarSearch,\n} = DataTable;\n\n\nconst initialRows = [\n  {\n    id: 'a',\n    name: 'Load Balancer 3',\n    protocol: 'HTTP',\n    port: 3000,\n    rule: 'Round robin',\n    attached_groups: 'Kevins VM Groups',\n    status: 'Disabled',\n  },\n  {\n    id: 'b',\n    name: 'Load Balancer 1',\n    protocol: 'HTTP',\n    port: 443,\n    rule: 'Round robin',\n    attached_groups: 'Maureens VM Groups',\n    status: 'Starting',\n  },\n  {\n    id: 'c',\n    name: 'Load Balancer 2',\n    protocol: 'HTTP',\n    port: 80,\n    rule: 'DNS delegation',\n    attached_groups: 'Andrews VM Groups',\n    status: 'Active',\n  },\n];\n\nconst headers = [\n  {\n    key: 'name',\n    header: 'Name',\n  },\n  {\n    key: 'protocol',\n    header: 'Protocol',\n  },\n  {\n    key: 'port',\n    header: 'Port',\n  },\n  {\n    key: 'rule',\n    header: 'Rule',\n  },\n  {\n    key: 'attached_groups',\n    header: 'Attached Groups',\n  },\n  {\n    key: 'status',\n    header: 'Status',\n  },\n];\n\n\n\n\nexport default () => (\n  <DataTable\n    className=\"my-data-table\"\n    rows={initialRows}\n    headers={headers}\n    render={({ rows, headers, getHeaderProps, getRowProps, onInputChange }) => (\n      <TableContainer >\n        <TableToolbar>\n          <TableToolbarSearch onChange={onInputChange} className=\"data-table-search\" />\n          <TableToolbarContent>\n            <TableToolbarAction\n              icon={iconDownload}\n              iconDescription=\"Download\"\n              onClick={null}\n            />\n            <TableToolbarAction\n              icon={iconEdit}\n              iconDescription=\"Edit\"\n              onClick={null}\n            />\n            <TableToolbarAction\n              icon={iconSettings}\n              iconDescription=\"Settings\"\n              onClick={null}\n            />\n            <Button onClick={null} small kind=\"primary\" className=\"data-table-add-new\">\n              Add new\n            </Button>\n          </TableToolbarContent>\n        </TableToolbar>\n        <Table>\n          <TableHead>\n            <TableRow>\n              {headers.map(header => (\n                <TableHeader {...getHeaderProps({ header })}>\n                  {header.header}\n                </TableHeader>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map(row => (\n              <TableRow {...getRowProps({ row })}>\n                {row.cells.map(cell => (\n                  <TableCell key={cell.id}>{cell.value}</TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    )}\n  />\n);","import React, { Component } from 'react';\n\nimport { Button, ModalWrapper, Dropdown, DropdownItem } from 'carbon-components-react';\nimport DataTableExample from './DataTableExample';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App page-content\">\n      <div className=\"bx--grid\">\n        <div className=\"bx--row\">\n          <div className=\"bx--col-xs-12 \">\n            <h1>Some headline</h1>\n            <p className=\"bx--type-gamma .bx--spacing-xl\">Lead in subtitle</p>\n            <Button\n              kind=\"secondary\"\n              className=\"some-class\"\n              onClick={null}\n              onFocus={null}\n            >\n            Secondary button\n            </Button>\n            <Button className=\"some-class\" onClick={null} onFocus={null}>\n            Primary button\n            </Button>\n          </div>\n        </div>\n        <div className=\"bx--row\">\n          <div className=\"bx--col-xs-6\">\n            <ModalWrapper\n              id=\"transactional-passive-modal\"\n              handleSubmit={null}\n              className=\"some-class\"\n              passiveModal={false}\n              buttonTriggerText=\"Launch Modal\"\n              modalLabel=\"Label\"\n              modalHeading=\"DataTable with toolbar\"\n              selectorPrimaryFocus='.data-table-search .bx--search-input'\n              shouldCloseAfterSubmit\n              onBlur={null}\n              onClick={null}\n              onFocus={null}\n              onMouseDown={null}\n              onMouseEnter={null}\n              onMouseLeave={null}\n              onMouseUp={null}\n            >\n              <DataTableExample />\n            </ModalWrapper>\n          </div>\n          <div className=\"bx--col-xs-6\">\n          <div style={{minWidth: '20em'}}>\n          <Dropdown\n            className=\"some-class\"\n            defaultText=\"Dropdown label\"\n            value=\"\"\n            selectedText=\"\"\n            ariaLabel=\"dropdown menu label\"\n            iconDescription=\"\"\n            onChange={(e) => {console.log(e)}}\n            onOpen={(e) => {console.log(e)}}\n            onClose={(e) => {console.log(e)}}\n          >\n          <DropdownItem itemText=\"Option 1\" value=\"option1\" />\n          <DropdownItem itemText=\"Option 2\" value=\"option2\" />\n          <DropdownItem itemText=\"Option 3\" value=\"option3\" />\n          <DropdownItem itemText=\"Option 4\" value=\"option4\" />\n          <DropdownItem itemText=\"Option 5\" value=\"option5\" />\n          </Dropdown>\n          </div>\n          </div>\n        </div>\n        \n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}